import React from 'react';
import {
  StyleSheet,
  Text,
  View,
  TouchableOpacity,
  Platform,
  Alert,
} from 'react-native';
import {Audio} from 'expo-av';

const buttonColor = [
  'red',
  'blue',
  'green',
  'yellow',
  'purple',
  'orange',
  'brown',
  'black',
  // 'pink', //whack
  // 'grey', //pop
];

const MySounds = [
  require('./assets/1.mp3'),
  require('./assets/2.mp3'),
  require('./assets/3.mp3'),
  require('./assets/4.mp3'),
  require('./assets/5.mp3'),
  require('./assets/6.mp3'),
  require('./assets/7.mp3'),
  require('./assets/8.mp3'),
  require('./assets/popOut.mp3'),
  require('./assets/whack.mp3'),
];

const App = () => {
  //handlePlaySound = async () => {};
  const handlePlaySound = async (index, value) => {
    console.log(index, value);
    const soundObject = new Audio.Sound();
    try {
      let path = MySounds[index - 1];
      console.log(path);
      await soundObject.loadAsync(path);

      // Your sound is playing below!
      await soundObject
        .playAsync()
        .then(async (playbackStatus) => {
          setTimeout(() => {
            soundObject.unloadAsync();
            //}, playbackStatus.durationMillis);
          }, 3000);
        })
        .catch((error) => {
          console.log(error);
        });
    } catch (error) {
      console.log(error);
    }
  };

  return (
    <>
      <View style={styles.container}>
        {buttonColor &&
          buttonColor.map((item, index) => (
            <View
              key={index}
              style={styles.buttonContainer}
            >
              <TouchableOpacity
                style={[styles.button, {backgroundColor: item}]}
                onPress={(event) => handlePlaySound(index + 1, event)}
              >
                <Text style={styles.buttonText}>Level {index + 1}</Text>
              </TouchableOpacity>
            </View>
          ))}

        <View
          key={8}
          style={styles.buttonContainer}
        >
          <TouchableOpacity
            style={[styles.button, {backgroundColor: 'pink'}]}
            onPress={(event) => handlePlaySound(9, event)}
          >
            <Text style={styles.buttonText}>Pop Out</Text>
          </TouchableOpacity>
        </View>

        <View
          key={9}
          style={styles.buttonContainer}
        >
          <TouchableOpacity
            style={[styles.button, {backgroundColor: 'grey'}]}
            onPress={(event) => handlePlaySound(10, event)}
          >
            <Text style={styles.buttonText}>Whack</Text>
          </TouchableOpacity>
        </View>
      </View>
    </>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    justifyContent: 'center',
  },
  buttonContainer: {
    height: 40,
    margin: 5,
  },
  button: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
  },
  buttonText: {
    color: '#fff',
    fontSize: 18,
  },
});
export default App;
